<?php

namespace AppBundle\Repository;

use AppBundle\Entity\TypeDanse;
use AppBundle\Entity\User;
use AppBundle\Entity\Niveau;
use AppBundle\Entity\Salle;
use AppBundle\Entity\Cours;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * CoursRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CoursRepository extends EntityRepository
{
    public function findByTypeDanse(TypeDanse $typeDanse)
    {
        $qb = $this->createQueryBuilder('c');

        return $qb
            ->where($qb->expr()->eq('c.typeDanse', ':typeDanse'))
            ->getQuery()
            ->setParameter('typeDanse', $typeDanse)
            ->getResult();
    }

    public function findByNiveau(Niveau $niveau)
    {
        $qb = $this->createQueryBuilder('c');

        return $qb
            ->where($qb->expr()->eq('c.niveau', ':niveau'))
            ->getQuery()
            ->setParameter('niveau', $niveau)
            ->getResult();
    }

    public function findBySalle(Salle $salle)
    {
        $qb = $this->createQueryBuilder('c');

        return $qb
            ->where($qb->expr()->eq('c.salle', ':salle'))
            ->getQuery()
            ->setParameter('salle', $salle)
            ->getResult();
    }

    public function findByAnimateur(User $user)
    {
        $qb = $this->createQueryBuilder('u');

        return $qb
            ->where($qb->expr()->eq('c.user', ':user'))
            ->getQuery()
            ->setParameter('user', $user)
            ->getResult();
    }


    public function findByDate()
    {
        $currentdate = new \DateTime(); //Date du jour

        return $this->createQueryBuilder('cours')
            ->select('cours')
            ->where('cours.dateCours >= :date')
            ->setParameter(':date', $currentdate->format('Y-m-d'))
            ->getQuery()
            ->getResult();
    }

    public function findByOldDate()
    {
        $currentdate = new \DateTime(); //Date du jour

        return $this->createQueryBuilder('cours')
            ->select('cours')
            ->where('cours.dateCours < :date')
            ->setParameter(':date', $currentdate->format('Y-m-d'))
            ->getQuery()
            ->getResult();
    }




//
//    public function findByDate()
//    {
//        $now = new \DateTime();
//        return $this->createQueryBuilder('c')
//            ->where('c.dateCours > :limite')
//            ->setParameter('limite', $now)
//            ->getQuery();
//            ->getResult();
////      return  $qb->getResult();
//    }


}




//public function getByDate(\Datetime $date)
//{
//    $from = new \DateTime($date->format("Y-m-d")." 00:00:00");
//    $to   = new \DateTime($date->format("Y-m-d")." 23:59:59");
//
//    $qb = $this->createQueryBuilder("e");
//    $qb
//        ->andWhere('e.date BETWEEN :from AND :to')
//        ->setParameter('from', $from )
//        ->setParameter('to', $to)
//    ;
//    $result = $qb->getQuery()->getResult();
//
//    return $result;

